@page "/"

@using System
@using DotMatrix.Core
@using DotMatrix.BlazorWasm.Components

<PageTitle>Index</PageTitle>

<InputFile OnChange="@LoadFiles" />

<div id="dbg-section">
    <div class="row">
        <div class="col-lg-4">
            Display
            <div id="display-container">
                <canvas id="myCanvas" width="320" height="288"></canvas>
            </div>
        </div>

        <div class="col-lg-4">
            Instructions
            <div id="instructions" class="overflow-scroll">
            </div>
        </div>

        <div class="col-lg-2">
            Registers
            <div id="registers">
                <CpuStateRenderer cpuState="@cpu?.CpuState"/>
            </div>
        </div>

        <div class="col-lg-2">
            Stack
            <div id="stack">
            </div>
        </div>

        <div class="col-lg-6">
            Memory
            <div id="memory">
            </div>
        </div>

        <div class="col-lg-6">
            VRAM
            <div id="vram">
            </div>
        </div>
    </div>
</div>

@code {
    Cpu? cpu;

    private async void LoadFiles(InputFileChangeEventArgs e)
    {
        IBrowserFile file = e.File;
        byte[] data = new byte[e.File.Size];
        Console.WriteLine(e.File.Size);

        if (file != null)
        {
            Stream stream = file.OpenReadStream();
            using (MemoryStream memoryStream = new())
            {
                await stream.CopyToAsync(memoryStream);
                data = memoryStream.ToArray();
            }
        }
        RunTest(data);
    }

    private static byte[] ReadFromStream(Stream fileStream)
    {
        using (MemoryStream memoryStream = new())
        {
            fileStream.CopyTo(memoryStream);
            return memoryStream.ToArray();
        }
    }

    public void RunTest(byte[] bootRomData)
    {
        Console.WriteLine($"Loading Boot ROM from {nameof(bootRomData)}");
        BootRom bootRom = new(bootRomData);

        @* Console.WriteLine($"Loading ROM from {args[1]}");
        Cartridge cartridge = new(File.ReadAllBytes(args[1])); *@

        Memory memory = new();
        Bus bus = new(memory, cartridge: null, bootRom);
        IDisplay display = new NoDisplay();
        cpu = new(bus, display);

        // for (int i = 0; i < MemoryRegion.BootRomEnd / DotMatrixConsoleSpecs.InstructionSizeInBytes; i += 1)
        // {
        //     cpu.ExecuteCycle();
        // }

        cpu.ExecuteFrame(MemoryRegion.BootRomEnd * DotMatrixConsoleSpecs.InstructionSizeInBytes);
    }
}
