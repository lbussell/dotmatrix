<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>

    <IsRoslynComponent>true</IsRoslynComponent>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild> <!-- Generates a package at build -->
    <IncludeBuildOutput>false</IncludeBuildOutput> <!-- Do not include the generator as a lib dependency -->
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <!-- Take a private dependency on System.Text.Json (PrivateAssets=all)
         Consumers of this generator will not reference it.
         Set GeneratePathProperty=true so we can reference the binaries via the PKGSystem_Text_Json property -->
    <PackageReference
      Include="System.Text.Json"
      PrivateAssets="all"
      GeneratePathProperty="true"
    />

    <!-- Package the generator in the analyzer directory of the nuget package -->
    <None
      Include="$(OutputPath)\$(AssemblyName).dll"
      Pack="true"
      PackagePath="analyzers/dotnet/cs"
      Visible="false"
    />

    <!-- Package the dependencies alongside the generator assembly -->
    <None
      Include="$(PkgSystem_Text_Json)\lib\netstandard2.0\*.dll"
      Pack="true"
      PackagePath="analyzers/dotnet/cs"
      Visible="false"
    />
  </ItemGroup>
</Project>
